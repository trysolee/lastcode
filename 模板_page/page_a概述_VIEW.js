// VIEW 在三个地方出现 :
// 1 . EDIT
// 2 . NEW
// 3 . page

// 操作封闭环 , 简称 '闭环'
// 一个'page' 是一个 '闭环'
// 一个'主JP' 与其 '子JP'  是一个 '闭环'
// 一个 '闭环' 有 '交互' , '提交' , 接收' , '更新' 四个步骤
// 跳转只能跳到 '主JP'  , 不能跳到 '子JP'
//
// . . '交互'时 , 可以 '跳到' 另一个 '闭环' ,
// '跳转' 后 , 原 'page' 仍然留在 '页碑'里面
//
// . . '主JP/子JP' 发生了'输入'/'修改'
// 就不能跳出 本'闭环'
// 直到返回 , 退出'主JP' , ( 从 EDIT 或 NEW 放到 List 为 标志) 
// 自动连接服务器更新
//
// . . 'page' 发生了 '输入'/'修改'
// 返回退出 'page'时 , 询问是否放弃输入
//
// . .   '提交' , '接收' 都规定在 本'闭环'
//
//  . .  '更新' 结束后 , '页碑' 里面清除 本'page ',  
// 再可以 '跳到' 其他 '闭环'
//
// 

var page模板 = {

	// 这个属于 'page'里面的VIEW ,
	// 有 'A' , 'B' 一类的 选项
	VIEW : [ //
	[ '_', '', '请扫描' ],// 
	[ 'A', '输入', '孩子id' ], //
	[ 'A', '显示', '家庭id' ],// 
	[ '_', '按键', '历史' ],// 
	[ 'A', '显示', '存款时间' ], //
	[ 'B', '输入', '变化', '调整' ], [ 'B', '输入', '简报', '原因' ], //

	// 常规 ----------
	[ 'M', '输入', '用户名', '$输入提示$' ],// <page>
	[ '输入', '剧本名字', '$输入提示$' ],// <EDIT><NEW>

	[ 'A', '显示', '存款时间', '$输入提示$' ], // <page>
	[ '显示', '家庭id', '$输入提示$' ],// <EDIT><NEW>

	// '_' 特殊 ----------

	[ '_' ], // // 隔断 ( 空行 )

	[ '_', '按键', '扫描登录' ],// page注册 '扫描登录'

	[ '_', '子JP', 'db剧本提示' ],// 

	//
	],

// VIEW 在三个地方出现 :
// 1 . EDIT
// 2 . NEW
// 3 . page
//
// 'VIEW' 在 'EDIT' 可以有 '子JP' , 也可以有 '按键'
// 在操作中 , 'EDIT' 有了修改,输入后 , '按键'被屏蔽
//
// 'VIEW' 在 'NEW' 可以有 '子JP' , 不能有 '按键'
//
// 'VIEW' 在 'page' 可以有'按键' , 不能有 '子JP'
// 这里的 '按键' 只能跳到 '主JP'的DB , 或者其他 'page'
// '按键' 跳走后 , 'page' 保存在 '页堆'

// VIEW 的 '按键' 可以指向 'page' 或 'DB'( list )

// 没有 VIEW ( VIEW : null )
// 被视为 '连接等待' , 同样进入 'page堆栈'
// getSB操作正常进行
// 返回时被'忽略'

// 有 VIEW 自动产生 '确认' , '返回' 按键
// 如果'本page'是'堆栈头' 就没有 '返回' 按键

// 没有 VIEW ( VIEW : null )
// 被其他'page'指向时 , 会'预览'是否满足条件( 无异常 )
// 如果是有 VIEW的'page' ,就不会'预览'

}
