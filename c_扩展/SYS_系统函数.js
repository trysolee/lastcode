//
// 系统函数
//
//
//

var ROOT = [

	['SF_字串连加', // 
		{ // 概述
			服务器: true,
			客户端: true,
			语言: ['PHP', 'JS'],
		}, // 
		//
		['例子', //
			'B', '名字', // 结果保存位置
			'常串', '过 ', // 
			'B', '分钟偏移', // 
			'常串', ' 分钟', // 
			// ...
		], //
	], //

	// TODO
	// SF_算式 : 取消 , 
	// 改为用<扩展组件>实现具体功能 .
	['SF_算式', // 只能操作 '数' 或者 '常数'
		{ // 概述
			服务器: true,
			客户端: true,
			语言: ['PHP', 'JS'],
		}, // 
		//
		['例子', //
			'B', '存款时间', // 结果保存位置
			'a-b', // 算式 // 包含: +-*/()%
			['B', '存款时间', // a
				'A', '扣除时间'
			], // b
		], //
	], //


	['SF_等值', // 
		'J', '剧本id', //
		'C', '剧本id', // 
		'常串', '数据异常', // 异常返回串
	], //

	['SF_创建XID', // 取消 , 在MF_里面处理
		{ // 概述
			服务器: true,
			客户端: false,
			语言: ['PHP'],
		}, // 
	], //
	// 只是新建一个对象

	['SF_创建本地数据', // 取消 , 在MF_里面处理
		{ // 概述
			服务器: false,
			客户端: true,
			语言: ['JS'],
		}, // 
	], //
	// 只是新建一个对象

	['SF_UP', // 
		'J',
	], //

	['SF_set', // 
		'B', '用户id', 'A', '用户id', //
	], //

	['SF_DB定位', // 
		'A', '孩子id', //
		'FLYc', '孩子id', // 
		'常串', '数据异常', // 定位失败
	], //

// TODO 重定位 与 定位 , 都是定位第一个参数
// 所以 , 取消 <SF_重定位>
	['SF_重定位', // 重定位 'C'
		'A', '孩子id', //
		'C', '孩子id', // 
		'常串', '数据异常', // 定位失败
	], //

	['SF_存在', // 
		'A', '孩子id', // <A> 里面存在 <孩子id>= <C.孩子id>
		'C', '孩子id', // 
		'常串', '数据异常', // 异常数据
	], //

	['SF_不存在', // 
		'A', '孩子id', //
		'C', '孩子id', // 
		'常串', '数据异常', // 异常数据
	], //

	// --------------------------------------
	// 设定BUF监听 , 当BUF更新时 , 触发 <root . BUF监听>
	//
	['SF_BUF监听', // TODO 取消
		'常串', '计算家庭有多少个孩子', //
	], //

	// 标记 执行对象 , 但暂时不执行 , 
	// 等 <进程> 准备把<控制权> 交还给<前台>时 
	// 再执行标记了的<对象>
	['SF_标记监听', // 
		'常串', '计算家庭有多少个孩子', //
	], //


	['SF_if_MF_fun', // 有异常就 false
		{ // 概述
			服务器: true,
			客户端: true,
			语言: ['PHP', 'JS'],
		}, // 
		//
		//
		['例子', //
			['MF_有孩子正忙'], // -- ( if )
			['SF_set', // ------------- 家庭id 相同 ( true )
				/*  */
				'FLY', 'ERR', '布尔', 'false', //
			], //
			['SF_set', // -------------不是一个家庭 ( false )
				/*  */
				'FLY', 'ERR', '布尔', 'true', //
				/*  */
				'FLY', 'ErrMsg', '常串', '不是我的家庭', //
			], //
		], //
	], //

	['SF_if', // 
		{ // 概述
			服务器: true,
			客户端: true,
			语言: ['PHP', 'JS'],
		}, // 
		//
		['例子', //
			'1', '1', '==', 'XD', '$XD_家庭ID', //
			['SF_set', // ------------- 家庭id 相同 ( true )
				/*  */
				'FLY', 'ERR', '布尔', 'false', //
			], //
			['SF_set', // -------------不是一个家庭 ( false )
				/*  */
				'FLY', 'ERR', '布尔', 'true', //
				/*  */
				'FLY', 'ErrMsg', '常串', '不是我的家庭', //
			], //
		], //
		['解析', //
			function(A, 参数包) { // A就是 <例子> 的那个数组
				J参数1 = 环境.参数(A[0], A[1]); // <环境> 一个解析工具包
				关系号 = A[2]; // < , > , != , == , <= , >=
				J参数2 = 环境.参数(A[3], A[4]);

				语句_真 = A[5];
				语句_假 = A[6];

				J参数1.前缀只能是('BX');
				J参数1.前缀只能是('XD'); // 可以是<BX> 或者 <XD>
				J参数2.前缀不能是('XD');
			}
		], // 
	], //

	['SF_选项', // 
		'A', '权限', //
		['家长', // -- 选项 1
			['SF_set', // --
				/*  */
				'FLY', 'ERR', '布尔', 'false', //
			], //
		],

		['管理员', // -- 选项 2
			['SF_set', // ---
				/*  */
				'FLY', 'ERR', '布尔', 'false', //
			], //
		], // 

	], //

	['SF_成立_FF_fun', // FF_fun 返回 true / false
		'A', '家庭id', '==', 'XD', '$XD_家庭ID', //
		'常串', '不是我的家庭', // 异常提示
	], //

	['SF_成立', // 
		'A', '家庭id', '==', 'XD', '$XD_家庭ID', //
		'常串', '不是我的家庭', // 异常提示
	], //

	['SF_随机数', // 
		'A', '密码', //
		'常数', '64', // 随机数位数
	], //

	['SF_新用户名', //
		'B', '用户id', //
		'B', '用户名', // 输出
	], //

	['SF_显示对象二维码', // 
		'A'
	], //
	// 如果 'A' 为 null , 显示对话框 , 提示异常信息

	['SF_扫描对象二维码', // 
		'A'
	], //

	['SF_立即输入', //
		'B', '码串', //
		'A', '相片', // 

		// 立即输入 , 如null输入
		// 针对 : ( 有输入页面的 变量 )
		// 条码
		// 声音
		// 文件
		// 相片
		// ID
		// 选项
		// 日期时间

		// // 立即输入 , 如null输入
		// 如果涉及到 '主键' , '唯一键' 的 立即 '重定位'
		// ( 一般指 : ID , 条码 )
		//
		// 如果 需要涉及 '主键' , '唯一键' 的 , 又不想 '重定位'
		// 可以 在 <BC>里面 增加一个 '变量' 来处理

	], //

	['SF_如null输入', //
		'B', '码串', //
		'A', '相片', // 
	], //
	// 针对 : // 跟 <立即输入>一样

	['SF_Each', 'B', 'MF_条件', 'MF_处理', // 
	], //

	['SF_Call监听', 'XX自定义XX', // 不能 调用 '预设号'
	], //

	// TODO
	['SF_call', '前缀', '名称', // 
	],
	// TODO
	// 需要写一个<JS> , <PHP>的导入口
	// 例如 :
	// <后台控制> , 在<服务端> <客户端>都有
	// 所以 <JS><PHP>都要各写一个<对象>
	// 导入各自的<导入口>
	//
	// 还需要写一个<注册文件>
	//

]